package data.model;

import java.util.concurrent.LinkedBlockingQueue;
import java.util.stream.Stream;

import javax.inject.Inject;

import lombok.Data;
import lombok.NoArgsConstructor;

import org.mongojack.Id;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.mongodb.DB;

import data.BaseDao;

@Data
@NoArgsConstructor
public class GeneratedName implements Model<String> {

  public static final String[] TOTAL = { "大虎", "小牛", "一豹", "黑狗", "阿鼠", "阿龙", "猪崽", "马崽", "羊娃", "孔雀", "喜鹊", "白鹭", "蝴蝶", "知了", "飞燕", "金龙", "大象", "熊猫", "大雁",
      "南鸿", "雄鹰", "金雕", "占鳌", "小鱼", "臭蛋", "青松", "高岗", "石坡", "长岭", "银河", "金水", "瑞溪", "南山", "白石", "翠玉", "麦屯", "麦茬", "青稞", "玉穗", "红梁", "白米", "黄江", "白雪", "金秋",
      "原春", "夏花", "快冉", "栏芳", "蕾婧", "蕾倩", "莉嫒", "莉妃", "莉弘", "莉蕾", "莉彤", "莉桐", "莉威", "莉微", "莉纹", "荔芳", "妍霞", "昕花", "名玉", "瑞雪", "玉娥", "燕芳", "汉娜", "焯妍", "悦苑",
      "一悦", "潇文", "春燕", "粒丽", "鲢梅", "良妹", "梁文", "琳娇", "琳升", "琳炫", "琳晔", "岭霞", "玲闵", "玲暖", "玲诗", "玲思", "律丽", "律琼", "律瑛", "埋媛", "枚琴", "玫琴", "玫燕", "镁妹", "镁茹",
      "镁婷", "密芬", "绵丽", "秒秀", "玮莹", "倩瑜", "丽娜", "晓莉", "莉琪", "璇琳", "旭娟", "素英", "伦玉", "汝琳", "鸿茹", "政美", "妮娜", "昂冉", "盎冉", "苞燕", "贝蓉", "蓓红", "本怡", "必琳", "斌红",
      "兵文", "波英", "灿洁", "曹文", "涔婵", "钗红", "钗妹", "婵蕾", "琬倩", "莹雪", "瑗媛", "婧春", "境怡", "静裴", "锴文", "锴悦", "科秀", "俪妍", "纯娅", "淳倩", "淳莹", "聪芬", "丛玲", "叮玲", "玎悦",
      "多莉", "晗冉", "昊瑶", "荷洁", "岚琳", "玉媛", "荷媛", "菏婷", "厚莉", "花蓉", "雯芳", "文英", "恚媛", "彗妍", "惠瑛", "蕙英", "戛玉", "慧英", "菲霏", "骄丽", "杰霞", "桀怡", "津文", "瑾萍", "劲芳",
      "劲蓉", "进媛", "晋婵", "经文", "菁冉", "竞琴", "婧岑", "久琴", "炬洁", "娟弟", "桊芳", "绢芳", "隽丽", "隽冉", "鄄芳", "珏冉", "峻妍", "浚妍", "开莹", "凯秀", "瑞瑶", "莹影", "宪玲", "怡江", "瑞佳",
      "思涵", "东萌", "亦璇", "瑞涵", "立城", "莹莹", "佩宁", "汝燕", "生玲", "悦欣", "文莹", "依美", "若盈", "立莹", "佳舟", "乃欣", "若笑", "鑫睻", "锦佳", "冰琴", "润花", "仙美", "红花", "茹云", "载文",
      "霞瑷", "玲羽", "玲竹", "清雪", "希希", "璐瑶", "露澜", "美芳", "宛婷", "啸蓉", "冠娜", "昌文", "芸茹", "晓箐", "思琦", "语嫣", "如清", "香莹", "育艳", "振莉", "均芳", "欣源", "彦婷", "怡慧", "彦瑛",
      "怡淋", "燕玮", "燕微", "智洁", "赛娅", "轩瑛", "怡苒", "莉春", "碗琴", "秀睿", "逾闽", "奕慈", "雨昕", "今晨", "于敏", "润萱", "嘉馨", "静宜", "银梅", "玲瑗", "妹利", "霞瑗", "伊美", "宇涵", "欣暄",
      "桉莉", "彦玉", "彦茹", "婷娜", "怡臣", "倩儿", "璐梅", "家格", "振洋", "莉莉", "玟心", "文瑄", "雨岸", "景羡", "焕冉", "函玉", "芳玉", "怡晨", "宗颖", "研悦", "艾琳", "力冉", "金莹", "琳婷", "育歆",
      "永君", "潞萱", "金慈", "育萍", "惠洁", "悦竹", "淑玉", "宇琼", "乐倩", "蓓婷", "姝燕", "宇娟", "玮霞", "伍怡", "汐茹", "熹婧", "霞晖", "显娜", "璇瑶", "娅碧", "娅梵", "娅佳", "娅颐", "嫣娇", "嫣娴",
      "珏裴", "颖冉", "金琳", "瑞艳", "瑾琳", "维英", "伊美", "语嫣", "萧冉", "盛悦", "婷炜", "小英", "佳冉", "轶娜", "逸秀", "逸娅", "逸悦", "溢颖", "寅雪", "瑛玫", "瑛婷", "樱瑛", "盈怡", "莹恩", "莹岚",
      "莹旬", "祉蓉", "钟花", "周琼", "周雪", "周妍", "周瑶", "竹茹", "苎雪", "祝丽", "转玲", "姿婵", "宗冉", "哎娜", "钰新", "花艳", "琪慧", "宇琪", "钰娟", "其芳", "力洋", "迪菲", "钰洁", "利芬", "宣莹",
      "歆涵", "思杰", "雯宣", "新莉", "知歆", "燕语", "雯静", "青歆", "寸涵", "骁萌", "妍妃", "双婷", "悦盈", "亚梅", "濮萍", "之歆", "韵涵", "雅菲", "凌进", "芝心", "明茹", "玟媗", "晨希", "芝涵", "希新",
      "若华", "佳恩", "肇颖", "子辛", "凌畅", "雯萱", "立云", "紫雯", "书兰", "思妍", "秀涵", "紫婧", "濮婵", "婵莹", "术燕", "中颖", "倩欣", "茹彤", "召艳", "蓉娜", "倩宁", "立凝", "若清", "飞玉", "宗文",
      "升悦", "新霞", "添文", "芮倩", "淇玉", "秀丽", "秀芳", "方文", "怡敏", "宇怡", "怡宇", "希悦", "薇婷", "莹玫", "莹美", "赢美", "岩莹", "雨菲", "思媛", "凯慧", "妍毓", "妍元", "东莹", "思悦", "玺文",
      "颖妹", "影娟", "影茹", "嫒瑛", "昀熙" };

  public static LinkedBlockingQueue<String> AVAILABLE;

  static {
    AVAILABLE = new LinkedBlockingQueue<>(TOTAL.length);
    Stream.of(TOTAL).forEach(AVAILABLE::add);
  }

  @Id private String name;
  @JsonProperty boolean used = false;

  @Override
  public String getId() {
    return name;
  }

  @Override
  public void setId(String key) {
    setName(key);
  }

  public static class Dao extends BaseDao<GeneratedName, String> {

    public static final String COLLECTION_NAME = "name";

    @Inject
    public Dao(DB db) {
      super(db.getCollection(COLLECTION_NAME), GeneratedName.class, String.class);
    }

    public LinkedBlockingQueue<String> getAvailableNames() {
//      DBCursor<GeneratedName> unused = find(DBQuery.is("used", false));
//      return StreamSupport.stream(unused.spliterator(), false).collect(Collectors.toCollection(LinkedBlockingQueue::new));
      return AVAILABLE;
    }
  }
}
